#!/usr/bin/env bash
set -e
#This is a fork of npiperelay that supports Assuan, the protocol that gpg-agent speaks
NPRREPO="ndimiduk/npiperelay"
NPRFILE="npiperelay_windows_amd64.exe"
NPRTAG="v1.6.0-libassuan-file-sockets-e9d23cb"

usage() {
	echo 'Usage: install [-hgvrft]'
	echo 'Install wsl-gpg-systemd automatically. See README for manual instructions.'
	echo ''
	echo '  -h, --help      this help'
	echo '  -g, --gh        use GitHub CLI to fetch npiperelay, installing it first if necessary'
	echo '  -v, --verbose   show verbose output when available'
        echo "  -r, --repo      the github repo from which to download npiperelay. Default: $NPRREPO"
        echo "  -f, --file      the npiperelay executable to download. Default: $NPRFILE"
        echo "  -t, --tag       the release tag npiperelay to download. Default: $NPRTAG"
	echo ''
	exit "$1"
}

opts=$(getopt -o 'hgvr:f:t:' --long 'help,gh,verbose,repo:,file:,tag:' -n install -- "$@")
eval set -- "$opts"
unset opts

for opt; do
	case "$opt" in
		-g|--gh) usegh="true";shift;;
		-h|--help) usage 0;;
		-v|--verbose) verbose="-v";shift;;
                -r|--repo) NPRREPO="$2";shift 2;;
                -f|--file) NPRFILE="$2";shift 2;;
                -t|--tag) NPRTAG="$2";shift 2;;
		*) break;;
	esac
done

NPRFILEURL="https://github.com/${NPRREPO}/releases/download/${NPRTAG}/${NPRFILE}"

#This is taken verbatim from the upstream installation instructions:
#https://github.com/cli/cli/blob/trunk/docs/install_linux.md#debian-ubuntu-linux-raspberry-pi-os-apt
install_gh() {
	printf 'This will install GitHub CLI (gh) using apt. You may be asked for a sudo password.\n'
	type -p curl >/dev/null || sudo apt install curl -y
	curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
		&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
		&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
		&& sudo apt update \
		&& sudo apt install gh -y
}

#remove CR from CRLF and flip \ to /
fixpath() {
	tr -d '\015' | tr '\\' '/'
}

enable_w32_ssh() {
	gpgagentconf="$(wslpath -u "$(gpgconf.exe --list-dirs homedir | fixpath)")"
	grep -q enable-win32-openssh-support "$gpgagentconf" || printf 'enable-win32-openssh-support\r\n' >> "$gpgagentconf"
	gpg-connect-agent.exe reloadagent /bye
}

#System Paths
#If you edit these, the install will not work.
workdir="$(mktemp -p '' -d install-ssh-pageant-XXXX)"
nprfile_w="${workdir}/$NPRFILE"
gpgwinpath="$(gpgconf.exe --list-dirs agent-socket | fixpath)"
gpgwinpath_extra="$(gpgconf.exe --list-dirs agent-extra-socket | fixpath)"
unitdir="${XDG_CONFIG_HOME:-$HOME/.config}/systemd/user"

#You can edit these if you really want, but they are sensible defaults
#Where to install the npiperelay binary. This MUST be on the Windows filesystem.
nprwinpath="$(powershell.exe -NoProfile -Command \$env:AppData | fixpath)/npiperelay/$NPRFILE"
nprwinpath_u="$(wslpath -u "$nprwinpath")"

#Where to install the symlink to npiperelay so that systemd can easily call it.
#It doesn't HAVE to be on the WSL filesystem, but it's much easier if it is.
localbin="$HOME/.local/bin"
nprlocalpath="${localbin}/$NPRFILE"

printf 'Downloading %s:%s %s...\n' "$NPRREPO" "$NPRTAG" "$NPRFILE"
if [ "$usegh" ]; then
	hash gh 2>/dev/null || install_gh
	gh release download -p "$NPRFILE" -R "$NPRREPO" -D "${workdir}" --clobber "$NPRTAG"
else
	curl -fsSL --output "${nprfile_w}" "$NPRFILEURL"
fi

printf 'Installing...\n'
sed 's%^ExecStart=\%h/.local/bin/npiperelay.exe%ExecStart='"${nprlocalpath}"'%' systemd-units/gpg-agent-ssh@.service > "${workdir}/gpg-agent-ssh@.service"
sed 's%^ExecStart=.*%ExecStart='"${nprlocalpath} -v -bg -ep -ei -s -a '${gpgwinpath}'%" systemd-units/gpg-agent@.service > "${workdir}/gpg-agent@.service"
sed 's%^ExecStart=.*%ExecStart='"${nprlocalpath} -v -bg -ep -ei -s -a '${gpgwinpath_extra}'%" systemd-units/gpg-agent-extra@.service > "${workdir}/gpg-agent-extra@.service"
cp systemd-units/gpg-agent-ssh.socket systemd-units/gpg-agent.socket systemd-units/gpg-agent-extra.socket "${workdir}/"
install "$verbose" -D "${nprfile_w}" "${nprwinpath_u}" && rm "${nprfile_w}"
install "$verbose" -Dm 644 -t "${unitdir}" "$workdir"/*
install "$verbose" -d "${localbin}"
ln "$verbose" -nfs "${nprwinpath_u}" "${localbin}"

rm -r "${workdir}"

printf 'Installation complete!\n'
